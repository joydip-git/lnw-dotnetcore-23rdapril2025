.Net Core DI:
	1. Manual/explicit 
	2. with the help of Host

.Net Core Cofifuration:
	1. Manual/explicit 
	2. with the help of Host

.Net Core Logging:
	1. Manual/explicit 
	2. with the help of Host

Hosting:
	IHost, Host, HostApplicationBuilder etc.

Service Lifetime => Singleton, Scoped and Transient

IServiceScopeFactory => CreateScope
ServiceScope => 

Delegate: reference to the method/methods

Callback mechanism
subscription notification model => event handling


anonymous (in-line) method: a method without a name, which will be written and will be referred immediately then and there by a delegate

example:
LogicInvoker<string> nameStartsWithA = delegate (string name)
    {
        return name[0] == 'a';
    };

LogicInvoker<int> greaterThanDel = delegate (int num) { return num > 5; };

anonymous method with Lambda Expression but without expression-body syntax: [returning value must be done with explicit use of "return" statement]
LogicInvoker<string> nameStartsWithA =(string name)=>{ return name[0] == 'a';};


anonymous method with Lambda Expression but with expression-body syntax: [returning value need not be done with explicit use of "return" statement]
LogicInvoker<string> nameStartsWithA =(string name)=> name[0] =='a';


1. delegate
2. generic
3. collections
4. OOP
5. new features: var keyword, lambda, extension method, expression syntax etc.
6. functional programming

LINQ: a mechanism/feature to query source of data through
	a. a series of methods (provided by the source of data , which generally is a collection) => Method Query Syntax
	b. query style => Query Operator syntax

Roslyn => compiler for C# and VB



